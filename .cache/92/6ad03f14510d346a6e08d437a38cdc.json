{"id":"main.js","dependencies":[{"name":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\package.json","includedInParent":true,"mtime":1660086748057},{"name":"./logic/cubeLogic","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\src\\main.js","resolved":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\src\\logic\\cubeLogic.js"},{"name":"./view/cubeVisual","loc":{"line":2,"column":27,"index":74},"parent":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\src\\main.js","resolved":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\src\\view\\cubeVisual.js"},{"name":"./view/eventContol","loc":{"line":3,"column":30,"index":125},"parent":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\src\\main.js","resolved":"C:\\Users\\ronid\\Documents\\Coding_projects\\rubiks_cube\\src\\view\\eventContol.js"}],"generated":{"js":"\"use strict\";\n\nvar _cubeLogic = require(\"./logic/cubeLogic\");\n\nvar _cubeVisual = require(\"./view/cubeVisual\");\n\nvar _eventContol = require(\"./view/eventContol\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar canvas = document.getElementById(\"canvas\");\nvar logic = new _cubeLogic.cubeLogic();\nvar view = new _cubeVisual.cubeVisual(logic, canvas);\nvar controls = new _eventContol.eventConstrol(logic, view, canvas); // add control buttons\n\nvar shuffleBtn = document.createElement(\"button\");\nshuffleBtn.innerHTML = \"Shuffle\";\ndocument.getElementById(\"controls\").appendChild(shuffleBtn);\n\nshuffleBtn.onclick = function () {\n  return shuffle();\n};\n\nvar resetBtn = document.createElement(\"button\");\nresetBtn.innerHTML = \"Reset\";\ndocument.getElementById(\"controls\").appendChild(resetBtn);\n\nresetBtn.onclick = function () {\n  return reset();\n}; // const solveBtn = document.createElement(\"button\");\n// solveBtn.innerHTML = \"Solve\";\n// document.getElementById(\"controls\").appendChild(solveBtn);\n// solveBtn.onclick = () => solve()\n\n\nfunction delay(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n}\n\nfunction shuffle() {\n  return _shuffle.apply(this, arguments);\n}\n\nfunction _shuffle() {\n  _shuffle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var moves, _moves, firstMove, _loop, i;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            moves = logic.shuffle();\n            _moves = _slicedToArray(moves, 1), firstMove = _moves[0];\n            logic.rotate(firstMove.axis, firstMove.row, firstMove.direction);\n            view.rotate(firstMove.axis, firstMove.row, firstMove.direction);\n            _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(i) {\n              return _regeneratorRuntime().wrap(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return delay(850).then(function () {\n                        view.rotate(moves[i].axis, moves[i].row, moves[i].direction);\n                        logic.rotate(moves[i].axis, moves[i].row, moves[i].direction);\n                      });\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _loop);\n            });\n            i = 1;\n\n          case 6:\n            if (!(i < moves.length)) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.delegateYield(_loop(i), \"t0\", 8);\n\n          case 8:\n            i++;\n            _context2.next = 6;\n            break;\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _shuffle.apply(this, arguments);\n}\n\nfunction reset() {\n  logic.resetCube();\n  view.repaintRubiks();\n} // function solve(){\n//     logic.rotate('x',0,1)\n//     view.rotate('x',0, 1)\n//     delay(2000).then(() => {\n//         logic.rotate('y',0,-1)\n//         view.rotate('y',0,-1)\n//     })\n//     delay(4000).then(() => {\n//         logic.rotate('z',2,-1)\n//         view.rotate('z',2,-1)\n//     })\n// }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":47},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":29,"column":4},"source":"main.js","original":{"line":5,"column":6},"name":"canvas"},{"generated":{"line":29,"column":10},"source":"main.js","original":{"line":5,"column":12}},{"generated":{"line":29,"column":13},"source":"main.js","original":{"line":5,"column":15},"name":"document"},{"generated":{"line":29,"column":21},"source":"main.js","original":{"line":5,"column":23}},{"generated":{"line":29,"column":22},"source":"main.js","original":{"line":5,"column":24},"name":"getElementById"},{"generated":{"line":29,"column":36},"source":"main.js","original":{"line":5,"column":15}},{"generated":{"line":29,"column":37},"source":"main.js","original":{"line":5,"column":39}},{"generated":{"line":29,"column":45},"source":"main.js","original":{"line":5,"column":15}},{"generated":{"line":29,"column":46},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":30,"column":4},"source":"main.js","original":{"line":6,"column":6},"name":"logic"},{"generated":{"line":30,"column":9},"source":"main.js","original":{"line":6,"column":11}},{"generated":{"line":30,"column":12},"source":"main.js","original":{"line":6,"column":14}},{"generated":{"line":30,"column":16},"source":"main.js","original":{"line":6,"column":18},"name":"cubeLogic"},{"generated":{"line":30,"column":36},"source":"main.js","original":{"line":6,"column":14}},{"generated":{"line":30,"column":38},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":31,"column":4},"source":"main.js","original":{"line":7,"column":6},"name":"view"},{"generated":{"line":31,"column":8},"source":"main.js","original":{"line":7,"column":10}},{"generated":{"line":31,"column":11},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":15},"source":"main.js","original":{"line":7,"column":17},"name":"cubeVisual"},{"generated":{"line":31,"column":37},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":38},"source":"main.js","original":{"line":7,"column":28},"name":"logic"},{"generated":{"line":31,"column":43},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":45},"source":"main.js","original":{"line":7,"column":35},"name":"canvas"},{"generated":{"line":31,"column":51},"source":"main.js","original":{"line":7,"column":13}},{"generated":{"line":31,"column":52},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":32,"column":4},"source":"main.js","original":{"line":8,"column":6},"name":"controls"},{"generated":{"line":32,"column":12},"source":"main.js","original":{"line":8,"column":14}},{"generated":{"line":32,"column":15},"source":"main.js","original":{"line":8,"column":17}},{"generated":{"line":32,"column":19},"source":"main.js","original":{"line":8,"column":21},"name":"eventConstrol"},{"generated":{"line":32,"column":45},"source":"main.js","original":{"line":8,"column":17}},{"generated":{"line":32,"column":46},"source":"main.js","original":{"line":8,"column":35},"name":"logic"},{"generated":{"line":32,"column":51},"source":"main.js","original":{"line":8,"column":17}},{"generated":{"line":32,"column":53},"source":"main.js","original":{"line":8,"column":42},"name":"view"},{"generated":{"line":32,"column":57},"source":"main.js","original":{"line":8,"column":17}},{"generated":{"line":32,"column":59},"source":"main.js","original":{"line":8,"column":47},"name":"canvas"},{"generated":{"line":32,"column":65},"source":"main.js","original":{"line":8,"column":17}},{"generated":{"line":32,"column":66},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":32,"column":68},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":34,"column":4},"source":"main.js","original":{"line":11,"column":6},"name":"shuffleBtn"},{"generated":{"line":34,"column":14},"source":"main.js","original":{"line":11,"column":16}},{"generated":{"line":34,"column":17},"source":"main.js","original":{"line":11,"column":19},"name":"document"},{"generated":{"line":34,"column":25},"source":"main.js","original":{"line":11,"column":27}},{"generated":{"line":34,"column":26},"source":"main.js","original":{"line":11,"column":28},"name":"createElement"},{"generated":{"line":34,"column":39},"source":"main.js","original":{"line":11,"column":19}},{"generated":{"line":34,"column":40},"source":"main.js","original":{"line":11,"column":42}},{"generated":{"line":34,"column":48},"source":"main.js","original":{"line":11,"column":19}},{"generated":{"line":34,"column":49},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":12,"column":0},"name":"shuffleBtn"},{"generated":{"line":35,"column":10},"source":"main.js","original":{"line":12,"column":10}},{"generated":{"line":35,"column":11},"source":"main.js","original":{"line":12,"column":11},"name":"innerHTML"},{"generated":{"line":35,"column":20},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":35,"column":23},"source":"main.js","original":{"line":12,"column":23}},{"generated":{"line":35,"column":32},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":36,"column":0},"source":"main.js","original":{"line":13,"column":0},"name":"document"},{"generated":{"line":36,"column":8},"source":"main.js","original":{"line":13,"column":8}},{"generated":{"line":36,"column":9},"source":"main.js","original":{"line":13,"column":9},"name":"getElementById"},{"generated":{"line":36,"column":23},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":36,"column":24},"source":"main.js","original":{"line":13,"column":24}},{"generated":{"line":36,"column":34},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":36,"column":36},"source":"main.js","original":{"line":13,"column":36},"name":"appendChild"},{"generated":{"line":36,"column":47},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":36,"column":48},"source":"main.js","original":{"line":13,"column":48},"name":"shuffleBtn"},{"generated":{"line":36,"column":58},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":38,"column":0},"source":"main.js","original":{"line":14,"column":0},"name":"shuffleBtn"},{"generated":{"line":38,"column":10},"source":"main.js","original":{"line":14,"column":10}},{"generated":{"line":38,"column":11},"source":"main.js","original":{"line":14,"column":11},"name":"onclick"},{"generated":{"line":38,"column":18},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":38,"column":21},"source":"main.js","original":{"line":14,"column":21}},{"generated":{"line":39,"column":2},"source":"main.js","original":{"line":14,"column":21}},{"generated":{"line":39,"column":9},"source":"main.js","original":{"line":14,"column":27},"name":"shuffle"},{"generated":{"line":39,"column":16},"source":"main.js","original":{"line":14,"column":34}},{"generated":{"line":39,"column":18},"source":"main.js","original":{"line":14,"column":21}},{"generated":{"line":40,"column":0},"source":"main.js","original":{"line":14,"column":21}},{"generated":{"line":40,"column":1},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":42,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":42,"column":4},"source":"main.js","original":{"line":16,"column":6},"name":"resetBtn"},{"generated":{"line":42,"column":12},"source":"main.js","original":{"line":16,"column":14}},{"generated":{"line":42,"column":15},"source":"main.js","original":{"line":16,"column":17},"name":"document"},{"generated":{"line":42,"column":23},"source":"main.js","original":{"line":16,"column":25}},{"generated":{"line":42,"column":24},"source":"main.js","original":{"line":16,"column":26},"name":"createElement"},{"generated":{"line":42,"column":37},"source":"main.js","original":{"line":16,"column":17}},{"generated":{"line":42,"column":38},"source":"main.js","original":{"line":16,"column":40}},{"generated":{"line":42,"column":46},"source":"main.js","original":{"line":16,"column":17}},{"generated":{"line":42,"column":47},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":43,"column":0},"source":"main.js","original":{"line":17,"column":0},"name":"resetBtn"},{"generated":{"line":43,"column":8},"source":"main.js","original":{"line":17,"column":8}},{"generated":{"line":43,"column":9},"source":"main.js","original":{"line":17,"column":9},"name":"innerHTML"},{"generated":{"line":43,"column":18},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":43,"column":21},"source":"main.js","original":{"line":17,"column":21}},{"generated":{"line":43,"column":28},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":44,"column":0},"source":"main.js","original":{"line":18,"column":0},"name":"document"},{"generated":{"line":44,"column":8},"source":"main.js","original":{"line":18,"column":8}},{"generated":{"line":44,"column":9},"source":"main.js","original":{"line":18,"column":9},"name":"getElementById"},{"generated":{"line":44,"column":23},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":44,"column":24},"source":"main.js","original":{"line":18,"column":24}},{"generated":{"line":44,"column":34},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":44,"column":36},"source":"main.js","original":{"line":18,"column":36},"name":"appendChild"},{"generated":{"line":44,"column":47},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":44,"column":48},"source":"main.js","original":{"line":18,"column":48},"name":"resetBtn"},{"generated":{"line":44,"column":56},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":46,"column":0},"source":"main.js","original":{"line":19,"column":0},"name":"resetBtn"},{"generated":{"line":46,"column":8},"source":"main.js","original":{"line":19,"column":8}},{"generated":{"line":46,"column":9},"source":"main.js","original":{"line":19,"column":9},"name":"onclick"},{"generated":{"line":46,"column":16},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":46,"column":19},"source":"main.js","original":{"line":19,"column":19}},{"generated":{"line":47,"column":2},"source":"main.js","original":{"line":19,"column":19}},{"generated":{"line":47,"column":9},"source":"main.js","original":{"line":19,"column":25},"name":"reset"},{"generated":{"line":47,"column":14},"source":"main.js","original":{"line":19,"column":30}},{"generated":{"line":47,"column":16},"source":"main.js","original":{"line":19,"column":19}},{"generated":{"line":48,"column":0},"source":"main.js","original":{"line":19,"column":19}},{"generated":{"line":48,"column":1},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":48,"column":3},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":49,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":50,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":51,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":54,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":54,"column":9},"source":"main.js","original":{"line":26,"column":9},"name":"delay"},{"generated":{"line":54,"column":14},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":54,"column":15},"source":"main.js","original":{"line":26,"column":15},"name":"time"},{"generated":{"line":54,"column":19},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":54,"column":21},"source":"main.js","original":{"line":26,"column":21}},{"generated":{"line":55,"column":2},"source":"main.js","original":{"line":27,"column":2}},{"generated":{"line":55,"column":9},"source":"main.js","original":{"line":27,"column":9}},{"generated":{"line":55,"column":13},"source":"main.js","original":{"line":27,"column":13},"name":"Promise"},{"generated":{"line":55,"column":20},"source":"main.js","original":{"line":27,"column":9}},{"generated":{"line":55,"column":21},"source":"main.js","original":{"line":27,"column":21}},{"generated":{"line":55,"column":31},"source":"main.js","original":{"line":27,"column":22},"name":"resolve"},{"generated":{"line":55,"column":38},"source":"main.js","original":{"line":27,"column":21}},{"generated":{"line":56,"column":4},"source":"main.js","original":{"line":27,"column":21}},{"generated":{"line":56,"column":11},"source":"main.js","original":{"line":27,"column":34},"name":"setTimeout"},{"generated":{"line":56,"column":21},"source":"main.js","original":{"line":27,"column":44}},{"generated":{"line":56,"column":22},"source":"main.js","original":{"line":27,"column":45},"name":"resolve"},{"generated":{"line":56,"column":29},"source":"main.js","original":{"line":27,"column":44}},{"generated":{"line":56,"column":31},"source":"main.js","original":{"line":27,"column":54},"name":"time"},{"generated":{"line":56,"column":35},"source":"main.js","original":{"line":27,"column":44}},{"generated":{"line":56,"column":36},"source":"main.js","original":{"line":27,"column":21}},{"generated":{"line":57,"column":2},"source":"main.js","original":{"line":27,"column":21}},{"generated":{"line":57,"column":3},"source":"main.js","original":{"line":27,"column":9}},{"generated":{"line":57,"column":4},"source":"main.js","original":{"line":27,"column":2}},{"generated":{"line":58,"column":0},"source":"main.js","original":{"line":28,"column":1}},{"generated":{"line":60,"column":9},"source":"main.js","original":{"line":30,"column":15},"name":"shuffle"},{"generated":{"line":65,"column":72},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":66,"column":4},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":68,"column":4},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":69,"column":6},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":70,"column":8},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":71,"column":10},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":72,"column":12},"source":"main.js","original":{"line":31,"column":6},"name":"moves"},{"generated":{"line":72,"column":17},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":72,"column":20},"source":"main.js","original":{"line":31,"column":14},"name":"logic"},{"generated":{"line":72,"column":25},"source":"main.js","original":{"line":31,"column":19}},{"generated":{"line":72,"column":26},"source":"main.js","original":{"line":31,"column":20},"name":"shuffle"},{"generated":{"line":72,"column":33},"source":"main.js","original":{"line":31,"column":14}},{"generated":{"line":72,"column":35},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":73,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":73,"column":36},"source":"main.js","original":{"line":32,"column":20},"name":"moves"},{"generated":{"line":73,"column":41},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":73,"column":47},"source":"main.js","original":{"line":32,"column":7},"name":"firstMove"},{"generated":{"line":73,"column":56},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":74,"column":12},"source":"main.js","original":{"line":34,"column":2},"name":"logic"},{"generated":{"line":74,"column":17},"source":"main.js","original":{"line":34,"column":7}},{"generated":{"line":74,"column":18},"source":"main.js","original":{"line":34,"column":8},"name":"rotate"},{"generated":{"line":74,"column":24},"source":"main.js","original":{"line":34,"column":2}},{"generated":{"line":74,"column":25},"source":"main.js","original":{"line":34,"column":15},"name":"firstMove"},{"generated":{"line":74,"column":34},"source":"main.js","original":{"line":34,"column":24}},{"generated":{"line":74,"column":35},"source":"main.js","original":{"line":34,"column":25},"name":"axis"},{"generated":{"line":74,"column":39},"source":"main.js","original":{"line":34,"column":2}},{"generated":{"line":74,"column":41},"source":"main.js","original":{"line":34,"column":31},"name":"firstMove"},{"generated":{"line":74,"column":50},"source":"main.js","original":{"line":34,"column":40}},{"generated":{"line":74,"column":51},"source":"main.js","original":{"line":34,"column":41},"name":"row"},{"generated":{"line":74,"column":54},"source":"main.js","original":{"line":34,"column":2}},{"generated":{"line":74,"column":56},"source":"main.js","original":{"line":34,"column":46},"name":"firstMove"},{"generated":{"line":74,"column":65},"source":"main.js","original":{"line":34,"column":55}},{"generated":{"line":74,"column":66},"source":"main.js","original":{"line":34,"column":56},"name":"direction"},{"generated":{"line":74,"column":75},"source":"main.js","original":{"line":34,"column":2}},{"generated":{"line":75,"column":12},"source":"main.js","original":{"line":35,"column":2},"name":"view"},{"generated":{"line":75,"column":16},"source":"main.js","original":{"line":35,"column":6}},{"generated":{"line":75,"column":17},"source":"main.js","original":{"line":35,"column":7},"name":"rotate"},{"generated":{"line":75,"column":23},"source":"main.js","original":{"line":35,"column":2}},{"generated":{"line":75,"column":24},"source":"main.js","original":{"line":35,"column":14},"name":"firstMove"},{"generated":{"line":75,"column":33},"source":"main.js","original":{"line":35,"column":23}},{"generated":{"line":75,"column":34},"source":"main.js","original":{"line":35,"column":24},"name":"axis"},{"generated":{"line":75,"column":38},"source":"main.js","original":{"line":35,"column":2}},{"generated":{"line":75,"column":40},"source":"main.js","original":{"line":35,"column":30},"name":"firstMove"},{"generated":{"line":75,"column":49},"source":"main.js","original":{"line":35,"column":39}},{"generated":{"line":75,"column":50},"source":"main.js","original":{"line":35,"column":40},"name":"row"},{"generated":{"line":75,"column":53},"source":"main.js","original":{"line":35,"column":2}},{"generated":{"line":75,"column":55},"source":"main.js","original":{"line":35,"column":45},"name":"firstMove"},{"generated":{"line":75,"column":64},"source":"main.js","original":{"line":35,"column":54}},{"generated":{"line":75,"column":65},"source":"main.js","original":{"line":35,"column":55},"name":"direction"},{"generated":{"line":75,"column":74},"source":"main.js","original":{"line":35,"column":2}},{"generated":{"line":76,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":76,"column":75},"source":"main.js","original":{"line":37,"column":11},"name":"i"},{"generated":{"line":76,"column":76},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":77,"column":14},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":78,"column":16},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":79,"column":18},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":80,"column":20},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":81,"column":22},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":82,"column":22},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":82,"column":29},"source":"main.js","original":{"line":38,"column":10},"name":"delay"},{"generated":{"line":82,"column":34},"source":"main.js","original":{"line":38,"column":15}},{"generated":{"line":82,"column":35},"source":"main.js","original":{"line":38,"column":16}},{"generated":{"line":82,"column":38},"source":"main.js","original":{"line":38,"column":15}},{"generated":{"line":82,"column":39},"source":"main.js","original":{"line":38,"column":10}},{"generated":{"line":82,"column":40},"source":"main.js","original":{"line":38,"column":21},"name":"then"},{"generated":{"line":82,"column":44},"source":"main.js","original":{"line":38,"column":10}},{"generated":{"line":82,"column":45},"source":"main.js","original":{"line":38,"column":26}},{"generated":{"line":82,"column":57},"source":"main.js","original":{"line":38,"column":32}},{"generated":{"line":83,"column":24},"source":"main.js","original":{"line":39,"column":6},"name":"view"},{"generated":{"line":83,"column":28},"source":"main.js","original":{"line":39,"column":10}},{"generated":{"line":83,"column":29},"source":"main.js","original":{"line":39,"column":11},"name":"rotate"},{"generated":{"line":83,"column":35},"source":"main.js","original":{"line":39,"column":6}},{"generated":{"line":83,"column":36},"source":"main.js","original":{"line":39,"column":18},"name":"moves"},{"generated":{"line":83,"column":41},"source":"main.js","original":{"line":39,"column":23}},{"generated":{"line":83,"column":42},"source":"main.js","original":{"line":39,"column":24},"name":"i"},{"generated":{"line":83,"column":43},"source":"main.js","original":{"line":39,"column":23}},{"generated":{"line":83,"column":44},"source":"main.js","original":{"line":39,"column":18}},{"generated":{"line":83,"column":45},"source":"main.js","original":{"line":39,"column":27},"name":"axis"},{"generated":{"line":83,"column":49},"source":"main.js","original":{"line":39,"column":6}},{"generated":{"line":83,"column":51},"source":"main.js","original":{"line":39,"column":33},"name":"moves"},{"generated":{"line":83,"column":56},"source":"main.js","original":{"line":39,"column":38}},{"generated":{"line":83,"column":57},"source":"main.js","original":{"line":39,"column":39},"name":"i"},{"generated":{"line":83,"column":58},"source":"main.js","original":{"line":39,"column":38}},{"generated":{"line":83,"column":59},"source":"main.js","original":{"line":39,"column":33}},{"generated":{"line":83,"column":60},"source":"main.js","original":{"line":39,"column":42},"name":"row"},{"generated":{"line":83,"column":63},"source":"main.js","original":{"line":39,"column":6}},{"generated":{"line":83,"column":65},"source":"main.js","original":{"line":39,"column":47},"name":"moves"},{"generated":{"line":83,"column":70},"source":"main.js","original":{"line":39,"column":52}},{"generated":{"line":83,"column":71},"source":"main.js","original":{"line":39,"column":53},"name":"i"},{"generated":{"line":83,"column":72},"source":"main.js","original":{"line":39,"column":52}},{"generated":{"line":83,"column":73},"source":"main.js","original":{"line":39,"column":47}},{"generated":{"line":83,"column":74},"source":"main.js","original":{"line":39,"column":56},"name":"direction"},{"generated":{"line":83,"column":83},"source":"main.js","original":{"line":39,"column":6}},{"generated":{"line":84,"column":24},"source":"main.js","original":{"line":40,"column":6},"name":"logic"},{"generated":{"line":84,"column":29},"source":"main.js","original":{"line":40,"column":11}},{"generated":{"line":84,"column":30},"source":"main.js","original":{"line":40,"column":12},"name":"rotate"},{"generated":{"line":84,"column":36},"source":"main.js","original":{"line":40,"column":6}},{"generated":{"line":84,"column":37},"source":"main.js","original":{"line":40,"column":19},"name":"moves"},{"generated":{"line":84,"column":42},"source":"main.js","original":{"line":40,"column":24}},{"generated":{"line":84,"column":43},"source":"main.js","original":{"line":40,"column":25},"name":"i"},{"generated":{"line":84,"column":44},"source":"main.js","original":{"line":40,"column":24}},{"generated":{"line":84,"column":45},"source":"main.js","original":{"line":40,"column":19}},{"generated":{"line":84,"column":46},"source":"main.js","original":{"line":40,"column":28},"name":"axis"},{"generated":{"line":84,"column":50},"source":"main.js","original":{"line":40,"column":6}},{"generated":{"line":84,"column":52},"source":"main.js","original":{"line":40,"column":34},"name":"moves"},{"generated":{"line":84,"column":57},"source":"main.js","original":{"line":40,"column":39}},{"generated":{"line":84,"column":58},"source":"main.js","original":{"line":40,"column":40},"name":"i"},{"generated":{"line":84,"column":59},"source":"main.js","original":{"line":40,"column":39}},{"generated":{"line":84,"column":60},"source":"main.js","original":{"line":40,"column":34}},{"generated":{"line":84,"column":61},"source":"main.js","original":{"line":40,"column":43},"name":"row"},{"generated":{"line":84,"column":64},"source":"main.js","original":{"line":40,"column":6}},{"generated":{"line":84,"column":66},"source":"main.js","original":{"line":40,"column":48},"name":"moves"},{"generated":{"line":84,"column":71},"source":"main.js","original":{"line":40,"column":53}},{"generated":{"line":84,"column":72},"source":"main.js","original":{"line":40,"column":54},"name":"i"},{"generated":{"line":84,"column":73},"source":"main.js","original":{"line":40,"column":53}},{"generated":{"line":84,"column":74},"source":"main.js","original":{"line":40,"column":48}},{"generated":{"line":84,"column":75},"source":"main.js","original":{"line":40,"column":57},"name":"direction"},{"generated":{"line":84,"column":84},"source":"main.js","original":{"line":40,"column":6}},{"generated":{"line":85,"column":22},"source":"main.js","original":{"line":41,"column":5}},{"generated":{"line":85,"column":23},"source":"main.js","original":{"line":38,"column":10}},{"generated":{"line":85,"column":24},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":87,"column":20},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":88,"column":20},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":89,"column":22},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":90,"column":18},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":91,"column":16},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":92,"column":14},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":93,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":94,"column":12},"source":"main.js","original":{"line":37,"column":11},"name":"i"},{"generated":{"line":94,"column":13},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":94,"column":16},"source":"main.js","original":{"line":37,"column":15}},{"generated":{"line":94,"column":17},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":96,"column":10},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":97,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":97,"column":18},"source":"main.js","original":{"line":37,"column":18},"name":"i"},{"generated":{"line":97,"column":19},"source":"main.js","original":{"line":37,"column":19}},{"generated":{"line":97,"column":22},"source":"main.js","original":{"line":37,"column":22},"name":"moves"},{"generated":{"line":97,"column":27},"source":"main.js","original":{"line":37,"column":27}},{"generated":{"line":97,"column":28},"source":"main.js","original":{"line":37,"column":28},"name":"length"},{"generated":{"line":97,"column":34},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":98,"column":14},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":99,"column":14},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":100,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":102,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":102,"column":49},"source":"main.js","original":{"line":37,"column":11},"name":"i"},{"generated":{"line":102,"column":50},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":104,"column":10},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":105,"column":12},"source":"main.js","original":{"line":37,"column":36},"name":"i"},{"generated":{"line":105,"column":13},"source":"main.js","original":{"line":37,"column":37}},{"generated":{"line":105,"column":15},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":106,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":107,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":109,"column":10},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":110,"column":10},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":111,"column":12},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":112,"column":8},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":113,"column":6},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":114,"column":4},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":115,"column":2},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":119,"column":0},"source":"main.js","original":{"line":45,"column":0}},{"generated":{"line":119,"column":9},"source":"main.js","original":{"line":45,"column":9},"name":"reset"},{"generated":{"line":119,"column":14},"source":"main.js","original":{"line":45,"column":0}},{"generated":{"line":119,"column":17},"source":"main.js","original":{"line":45,"column":16}},{"generated":{"line":120,"column":2},"source":"main.js","original":{"line":46,"column":2},"name":"logic"},{"generated":{"line":120,"column":7},"source":"main.js","original":{"line":46,"column":7}},{"generated":{"line":120,"column":8},"source":"main.js","original":{"line":46,"column":8},"name":"resetCube"},{"generated":{"line":120,"column":17},"source":"main.js","original":{"line":46,"column":2}},{"generated":{"line":121,"column":2},"source":"main.js","original":{"line":47,"column":2},"name":"view"},{"generated":{"line":121,"column":6},"source":"main.js","original":{"line":47,"column":6}},{"generated":{"line":121,"column":7},"source":"main.js","original":{"line":47,"column":7},"name":"repaintRubiks"},{"generated":{"line":121,"column":20},"source":"main.js","original":{"line":47,"column":2}},{"generated":{"line":122,"column":0},"source":"main.js","original":{"line":48,"column":1}},{"generated":{"line":122,"column":2},"source":"main.js","original":{"line":50,"column":0}},{"generated":{"line":123,"column":0},"source":"main.js","original":{"line":51,"column":0}},{"generated":{"line":124,"column":0},"source":"main.js","original":{"line":52,"column":0}},{"generated":{"line":125,"column":0},"source":"main.js","original":{"line":53,"column":0}},{"generated":{"line":126,"column":0},"source":"main.js","original":{"line":54,"column":0}},{"generated":{"line":127,"column":0},"source":"main.js","original":{"line":55,"column":0}},{"generated":{"line":128,"column":0},"source":"main.js","original":{"line":56,"column":0}},{"generated":{"line":129,"column":0},"source":"main.js","original":{"line":57,"column":0}},{"generated":{"line":130,"column":0},"source":"main.js","original":{"line":58,"column":0}},{"generated":{"line":131,"column":0},"source":"main.js","original":{"line":59,"column":0}},{"generated":{"line":132,"column":0},"source":"main.js","original":{"line":60,"column":0}},{"generated":{"line":133,"column":0},"source":"main.js","original":{"line":61,"column":0}}],"sources":{"main.js":"import { cubeLogic } from \"./logic/cubeLogic\";\nimport { cubeVisual } from \"./view/cubeVisual\";\nimport { eventConstrol } from \"./view/eventContol\";\n\nconst canvas = document.getElementById(\"canvas\")\nconst logic = new cubeLogic();\nconst view = new cubeVisual(logic, canvas);\nconst controls = new eventConstrol(logic, view,canvas);\n\n// add control buttons\nconst shuffleBtn = document.createElement(\"button\");\nshuffleBtn.innerHTML = \"Shuffle\";\ndocument.getElementById(\"controls\").appendChild(shuffleBtn);\nshuffleBtn.onclick = () => shuffle();\n\nconst resetBtn = document.createElement(\"button\");\nresetBtn.innerHTML = \"Reset\";\ndocument.getElementById(\"controls\").appendChild(resetBtn);\nresetBtn.onclick = () => reset();\n\n// const solveBtn = document.createElement(\"button\");\n// solveBtn.innerHTML = \"Solve\";\n// document.getElementById(\"controls\").appendChild(solveBtn);\n// solveBtn.onclick = () => solve()\n\nfunction delay(time) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n\nasync function shuffle() {\n  let moves = logic.shuffle();\n  let [firstMove] = moves;\n\n  logic.rotate(firstMove.axis, firstMove.row, firstMove.direction);\n  view.rotate(firstMove.axis, firstMove.row, firstMove.direction);\n\n  for (let i = 1; i < moves.length; i++) {\n    await delay(850).then(() => {\n      view.rotate(moves[i].axis, moves[i].row, moves[i].direction);\n      logic.rotate(moves[i].axis, moves[i].row, moves[i].direction);\n    });\n  }\n}\n\nfunction reset(){\n  logic.resetCube();\n  view.repaintRubiks();\n}\n\n// function solve(){\n//     logic.rotate('x',0,1)\n//     view.rotate('x',0, 1)\n//     delay(2000).then(() => {\n//         logic.rotate('y',0,-1)\n//         view.rotate('y',0,-1)\n//     })\n//     delay(4000).then(() => {\n//         logic.rotate('z',2,-1)\n//         view.rotate('z',2,-1)\n//     })\n// }\n"},"lineCount":null}},"error":null,"hash":"cd03d15fa6af53ec98d1c02d24f65117","cacheData":{"env":{}}}